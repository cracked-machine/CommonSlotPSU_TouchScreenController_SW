/*
 * TSC2046_STM32_EventManager.c
 *
 *  Created on: Jul 4, 2020
 *      Author: chris
 */


/*
 *
 *	@brief
 *
 *	@param None
 *	@retval
 *
 */

#include "TSC2046_STM32_EventManger.h"
#include "gpio.h"


// Private State Variables
TSC2046_StatesTypedef eTouchScreenState = TSC2046_IdleState;


// Private Function Prototypes
TSC2046_StatesTypedef	TSC2046_EM_EnableConversionState();
TSC2046_StatesTypedef	TSC2046_EM_EnableIdleState();

// Function Definitions

/*
 *
 *	@brief return the touch screen state
 *
 *	@param None
 *	@retval TSC2046_StatesTypedef - 	TSC2046_IdleState = 0x0,
											TSC2046_ConversionState
 *
 */
TSC2046_StatesTypedef 	TSC2046_EM_GetTouchScreenState()
{
	return eTouchScreenState;
}

/*
 *
 *	@brief Process new event and update touch screen state
 *
 *	@param newEvent
 *	@retval None
 *
 */
void TSC2046_EM_ProcessEvent(TSC2046_EventsTypedef * newEvent)
{
	switch(eTouchScreenState)
	{
		case TSC2046_IdleState:
		case TSC2046_ConversionState:

			switch(*newEvent)
			{
				case TSC2046_evIdle:
					eTouchScreenState = TSC2046_EM_EnableIdleState();
					break;

				case TSC2046_evPen:
					eTouchScreenState = TSC2046_EM_EnableConversionState();
					break;
			}
			break;
	}
}


/*
 *
 *	@brief Transition to TSC2046_ConversionState
 *
 *	@param None
 *	@retval TSC2046_StatesTypedef
 *
 */
TSC2046_StatesTypedef	TSC2046_EM_EnableConversionState()
{
	return TSC2046_ConversionState;
}



/*
 *
 *	@brief Transition to TSC2046_IdleState
 *
 *	@param None
 *	@retval TSC2046_StatesTypedef
 *
 */
TSC2046_StatesTypedef	TSC2046_EM_EnableIdleState()
{
	//HAL_GPIO_WritePin(TSC2046_IRQ_PORT, TSC2046_IRQ_PIN, GPIO_PIN_RESET);
	return TSC2046_IdleState;
}
